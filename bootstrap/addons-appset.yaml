apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-addons
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - git:
              repoURL: https://github.com/sergk/appset-addons
              revision: poc
              files:
                - path: configs/*/*/config.yaml
              values:
                app_name: "{{.path.basename}}"

          - clusters:
              selector:
                matchExpressions:
                # Check label to see if addon is enabled.
                - key: enable_{{ .values.app_name | snakecase }}
                  operator: In
                  values: ['true']
  template:
    metadata:
      name: 'addon-{{.cluster.name}}-{{.values.app_name}}'
    spec:
      project: default
      source:
        helm:
          releaseName: '{{.values.app_name}}'
          ignoreMissingValueFiles: true
          valueFiles:
          - '../../../clusters/{{.cluster.name}}/addons/{{.values.app_name}}.yaml'
        repoURL: 'https://github.com/sergk/appset-addons'
        path: 'charts/addons/{{.values.app_name}}'
        targetRevision: poc
      destination:
        namespace: '{{.values.app_name}}'
        name: '{{.cluster.name}}'
      syncPolicy:
        automated: {}
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true  # Big CRDs.
      ignoreDifferences:
          - group: admissionregistration.k8s.io
            kind: MutatingWebhookConfiguration
            jqPathExpressions:
            - .webhooks[].clientConfig.caBundle
          - group: admissionregistration.k8s.io
            kind: ValidatingWebhookConfiguration
            jqPathExpressions:
            - .webhooks[].clientConfig.caBundle

  templatePatch: |
    {{- if .autoSync }}
      syncPolicy:
        automated:
          prune: {{ .prune }}
    {{- end }}
